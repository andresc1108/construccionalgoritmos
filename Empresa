from LineaTelefonica import LineaTelefonica
class Empresa:
    
    '''----------------------------------------------------------------
    # atributos
    ----------------------------------------------------------------'''
    
    # Línea telefónica número 1.
    linea1 = ""
    # Línea telefónica número 2.
    linea2 = ""
    # Línea telefónica número 3.
    linea3 = ""
    
    '''----------------------------------------------------------------
    # Metodos
    ----------------------------------------------------------------'''
    
    def _init_(self):
        self.linea1 = LineaTelefonica()
        self.linea2 = LineaTelefonica()
        self.linea3 = LineaTelefonica()
        # TODO Parte3 PuntoA: Construir linea2 y linea3.
        
    # Retorna la l�nea 1.
    def darLinea1(self):
        return self.linea1
        # TODO Parte3 PuntoB: Completar el m�todo seg�n la documentaci�n dada.

    # Retorna la l�nea 2.
    def darLinea2(self):
        return self.linea2
        # // TODO Parte3 PuntoC: Completar el m�todo seg�n la documentaci�n dada.

    # Retorna la l�nea 3.
    def darLinea3(self):
        return self.linea3
        # // TODO Parte3 PuntoD: Completar el m�todo seg�n la documentaci�n dada.

    '''----------------------------------------------------------------
	    # Retorna el n�mero total de llamadas realizadas.
	    # @return Total de llamadas de las tres l�neas.
    ----------------------------------------------------------------'''
    def darTotalNumeroLlamadas(self):
        total= self.linea1.darNumeroLlamadas() + self.linea2.darNumeroLlamadas() + self.linea3.darNumeroLlamadas()
        return total
        # TODO Parte3 PuntoE: Completar el m�todo seg�n la documentaci�n dada.

    '''
	    # Retorna el total de minutos consumidos.
	    # @return Total de minutos de las tres l�neas.
	'''
    def darTotalMinutos(self):
        total= self.linea1.darNumeroMinutos() + self.linea2.darNumeroMinutos() + self.linea3.darNumeroMinutos()
        return total
        # TODO Parte3 PuntoF: Completar el m�todo seg�n la documentaci�n dada.

    '''
	    # Retorna el costo total de las llamadas realizadas.
	    # @return Costo total de las tres l�neas.
    '''
    def darTotalCostoLlamadas(self):
        total= self.linea1.darCostoLlamadas() + self.linea2.darCostoLlamadas() + self.linea3.darCostoLlamadas()
        return total
        # TODO Parte3 PuntoG: Completar el m�todo seg�n la documentaci�n dada.

    '''
        # Retorna el costo promedio de un minuto, seg�n los minutos consumidos. <br>
	    # @return Costo promedio por minuto.
    '''
    def darCostoPromedioMinuto(self): 
        prom = self.darTotalNumeroLlamadas() / self.darTotalMinutos()
        return prom 
        # TODO Parte3 PuntoH: Completar el m�todo seg�n la documentaci�n dada.
    
    '''
        # Agrega una llamada local a la l�nea telef�nica 1 <br>
        # <b>post: </b> Se agreg� la llamada a la l�nea 1.
        # @param pMinutos N�mero de minutos de la llamada. pMinutos > 0.
    '''
    def agregarLlamadaLocalLinea1(self, pMinutos):
        self.linea1.agregarLlamadaLocal(pMinutos)

    '''
        # Agrega una llamada local a la l�nea telef�nica 2. <br>
        # <b>post: </b> Se agreg� la llamada a la l�nea 2.
        # @param pMinutos N�mero de minutos de la llamada. pMinutos > 0.
    '''
    def agregarLlamadaLocalLinea2(self, pMinutos):
        self.linea2.agregarLlamadaLocal(pMinutos)
        
        # TODO Parte3 PuntoI: Completar el m�todo seg�n la documentaci�n dada.

    '''
        # Agrega una llamada local a la l�nea telef�nica 3. <br>
        # <b>post: </b> Se agrega la llamada a la l�nea 3.
        # @param pMinutos N�mero de minutos de la llamada. pMinutos > 0.
    '''
    def agregarLlamadaLocalLinea3(self, pMinutos):
        self.linea3.agregarLlamadaLoc…
